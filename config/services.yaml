# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

imports:
    - { resource: admin/content.yaml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Listeners
    App\Listener\Api\JsonRequestTransformerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 100 }

    App\Listener\Api\ApiTransformerListener:
        arguments:
            $env: '%kernel.environment%'
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 1 }

    # Param converters
    App\Configuration\Request\ParamConverter\QueryStringConverter:
        tags:
            - { name: request.param_converter, priority: 2, converter: query_string_converter }

    App\Configuration\Request\ParamConverter\DeserializeRequestConverter:
        tags:
            - { name: request.param_converter, priority: 1, converter: deserialize_request_converter }

    App\Handler\Serializer\MediaSerializer:
        tags:
            - { name: jms_serializer.handler, type: App\Application\Sonata\MediaBundle\Entity\Media, direction: serialization, format: json, method: serializeEvent }

    App\EventListener\UniqueSlugListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, connection: default }
